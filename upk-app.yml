AWSTemplateFormatVersion: 2010-09-09
Description: UPK App stack-Installation on Windows Server 2012
Parameters:
  Bucket:
    Description: Deployment bucket  
    Type: String
  AccountCIDR:
    Description: AWS Account network CIDR
    Type: String
  EnvType:
    Description: Environment type.
    Default: test
    Type: String
    AllowedValues:
      - prod
      - dev
      - test
    ConstraintDescription: 'must specify prod, dev, or test.'
  ServerType:
    Description: Environment type.
    Default: web server
    Type: String
    AllowedValues:
      - web server
      - application server
      - process scheduler
      - file server
      - SES Server
    ConstraintDescription: 'must specify prod, dev, or test.'
  DBLower:
    Description: Lowercase Database tag
    Type: String
  DBUpper:
    Description: Uppercase Database tag
    Type: String
  InstanceType:
    Description: EC2 instance type
    Type: String
    Default: t2.large
    AllowedValues:
      - t1.micro
      - t2.nano
      - t2.micro
      - t2.small
      - t2.medium
      - t2.large
      - m1.small
      - m1.medium
      - m1.large
      - m1.xlarge
      - m2.xlarge
      - m2.2xlarge
      - m2.4xlarge
      - m3.medium
      - m3.large
      - m3.xlarge
      - m3.2xlarge
      - m4.large
      - m4.xlarge
      - m4.2xlarge
      - m4.4xlarge
      - m4.10xlarge
      - c1.medium
      - c1.xlarge
      - c3.large
      - c3.xlarge
      - c3.2xlarge
      - c3.4xlarge
      - c3.8xlarge
      - c4.large
      - c4.xlarge
      - c4.2xlarge
      - c4.4xlarge
      - c4.8xlarge
      - g2.2xlarge
      - g2.8xlarge
      - r3.large
      - r3.xlarge
      - r3.2xlarge
      - r3.4xlarge
      - r3.8xlarge
      - i2.xlarge
      - i2.2xlarge
      - i2.4xlarge
      - i2.8xlarge
      - d2.xlarge
      - d2.2xlarge
      - d2.4xlarge
      - d2.8xlarge
      - hi1.4xlarge
      - hs1.8xlarge
      - cr1.8xlarge
      - cc2.8xlarge
      - cg1.4xlarge
    ConstraintDescription: must be a valid EC2 instance type.
  EnvStack:
    Description: 'Environment stack '
    Type: String
  IamInstanceProfile:
    Description: EC2 Iam Instance Profile    
    Type: String
  Version:
    Type: String
    AllowedValues:
      - 12.0.2
    Default: 12.0.2
  Mode:
    Type: String
    AllowedValues:
      - Normal
      - Debug
    Default: Normal
  NetworkStackName:
    Type: String
    Default: network-VPC-1L2C0APMPYJXI
  Account:
    Type: String
    Default: Build
    AllowedValues:
      - Production
      - Production-DR
      - Build
      - PMO
  Release:
    Type: String
    Default: Development
    AllowedValues:
      - Copy
      - Development
      - Demo
      - Dress-Rehearsal
      - Integration-Test
      - Main    
      - Performance-Monitor
      - Performance-Test
      - Payroll-Parallel-Test
      - System-Test
      - Training
      - User-Acceptance-Test
  SequenceID:
    Type: String
    Default: '1'
    AllowedValues:
      - 0
      - 1
      - 2
      - 3
      - 4
      - 5
      - 6
      - 7
      - 8
      - 9
  EncryptedAMI:
    Type: String
    Default: ami-fd0d4a85
  KeyPairName:
    Type: 'AWS::EC2::KeyPair::KeyName'
    Description: The Key Pair for EC2 Instances
    Default: ucpath-build-us-west-2
  EC2DBInstanceType:
    Type: String
    Default: m5.xlarge
  FriendlyName:
    Description: A Friendly Name for the environment.
    Type: String
    Default: test
  Purpose:
    Description: User input describing the reason for the environment.
    Type: String
    Default: test
  FAU:
    Description: The Financial Accounting Unit (FAU). The cost center for the environment.
    Type: String
    Default: test
  ServiceNowTicket:
    Description: The Service Now Ticket for the requested deployment or change.
    Type: String
    Default: test
  LegacyID:
    Description: >-
      Optional, if the instance is a copy from OMCS, this will be the original
      OMCS name of the environment.
    Type: String
    Default: test
  ServiceOwner:
    Description: The Service Owner for the Environment.
    Type: String
    Default: test
  SourceDatabase:
    Description: The Source DB that was used to create the environment.
    Type: String
    Default: test
  SourceDate:
    Description: The Source Date of the DB Used.
    Type: String
    Default: test
  MaintenanceWindow:
    Description: The Predefined Maintenance Window
    Type: String
    Default: test
  RequestedBy:
    Description: The Requestor for the Instance.
    Type: String
    Default: test
  RequestedDate:
    Description: The Date the Instance was requested.
    Type: String
    Default: test
  R53HostedZone:
    Description: Route53 Hosted Zone URL
    Type: String    
  DateCreated:
    Description: The Date the Instance was created.
    Type: String
    Default: test
  RDSURL:
    Description: RDS URL
    Type: String    
  NetworkStack:
    Description: VPC network stack name
    Type: String
  DBMasterUserPassword:
    Type: String
    NoEcho: true
  UPKDBUSRPWD:
    Type: String
    NoEcho: true
  UPKDBUSRAPPPWD:
    Type: String
    NoEcho: true
  UPKADMINPWD:
    Type: String
    NoEcho: true
  EC2URL: 
    Description: EC2 URL 
    Type: String
  SSLCertificateArn:
    Description: SSL Certificate ARN
    Type: String    
  WebTierInternalFleetMinSize:
    Description: Minimum number of Web Servers
    Type: Number
  WebTierInternalFleetMaxSize:
    Description: Maximum number of Web Servers
    Type: Number    
Resources:
  UpkRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: ''
            Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
                - ssm.amazonaws.com
            Action: 'sts:AssumeRole'
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/AmazonS3FullAccess'
        - 'arn:aws:iam::aws:policy/AmazonEC2FullAccess'
        - 'arn:aws:iam::aws:policy/CloudWatchFullAccess'
        - 'arn:aws:iam::aws:policy/service-role/AmazonEC2RoleforSSM'
      Path: /
      Policies:
        - PolicyName: UPKS3Policy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Sid: AccessS3
                Action:
                  - 's3:GetObject'
                  - 's3:ListBucket'
                Effect: Allow
                Resource: !Join 
                  - ''
                  - - 'arn:aws:s3:::'
                    - !Ref Bucket
                    - ''
                    - 'arn:aws:s3:::'
                    - !Ref Bucket
                    - /*
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 449edeae-7a5e-4c5d-b639-59ba61891129
  UpkInstanceProfile:
    Type: 'AWS::IAM::InstanceProfile'
    Properties:
      Path: /
      Roles:
        - !Ref UpkRole
  WebTierInternalFleet:
    Type: 'AWS::AutoScaling::AutoScalingGroup'
    CreationPolicy:
      ResourceSignal:
        Count: '1'
        Timeout: PT250M
    Properties:
      VPCZoneIdentifier:
        - !ImportValue 
          'Fn::Sub': '${NetworkStack}-ucsnec2A'
        - !ImportValue 
          'Fn::Sub': '${NetworkStack}-ucsnec2B'
        - !ImportValue 
          'Fn::Sub': '${NetworkStack}-ucsnec2C'
      HealthCheckGracePeriod: 900
      HealthCheckType: EC2
      LaunchConfigurationName: !Ref WebTierInternalLaunchConfig
      MinSize: !Ref WebTierInternalFleetMinSize
      MaxSize: !Ref WebTierInternalFleetMaxSize
      DesiredCapacity: !Ref WebTierInternalFleetMinSize
      TerminationPolicies:
        - OldestInstance
      MetricsCollection:
        - Granularity: 1Minute
      TargetGroupARNs:
        - !Ref WebTierInternalALBTarget
      Tags:
        - Key: Name
          Value: !Join 
            - ''
            - - !Ref DBUpper
              - '-'
              - EC2
              - '-'
              - Web
              - '-'
              - Internal
          PropagateAtLaunch: 'true'
    Metadata:
      'AWS::CloudFormation::Designer':
        id: bcb7a421-6b30-4603-915e-5015445f5f77
        
        
  WebTierInternalLaunchConfig:
    Type: 'AWS::AutoScaling::LaunchConfiguration'
    Properties:
      ImageId: !Ref EncryptedAMI
      InstanceType: !Ref InstanceType
      KeyName: !Ref KeyPairName
      BlockDeviceMappings:
        - DeviceName: /dev/sda1
          Ebs:
            VolumeSize: '100'
        - DeviceName: /dev/sdm
          Ebs:
            VolumeSize: '250'
      IamInstanceProfile: !Ref IamInstanceProfile
      SecurityGroups:
        - !Ref WebTierEC2SecurityGroup
#        - !ImportValue 
#          'Fn::Sub': '${EnvStack}-EFSEC2SG'
      UserData: !Base64 
        'Fn::Join':
          - ''
          - - |
              <script>
            - 'cfn-init.exe -v -s '
            - !Ref 'AWS::StackId'
            - ' -r WebTierInternalLaunchConfig'
            - '         --configsets '
            - !Ref Mode
            - ' --region '
            - !Ref 'AWS::Region'
            - |+
            
            - !Sub >-
              cfn-signal --success true --resource WebTierInternalFleet --stack
              ${AWS::StackName} --region ${AWS::Region}

            - </script>
#      Tags:
##        - Key: Createdby
##          Value: !Ref UserID
#        - Key: CustomerReference
#          Value: DLZP Group POC-upk
#        - Key: CustomerChargeCode
#          Value: Internal
#        - Key: Date
#          Value: 2016-02-11
#        - Key: Name
#          Value: !Join 
#            - ''
#            - - !Ref DBUpper
#              - '-'
#              - EC2
#              - '-'
#              - App
#        - Key: Mail
#          Value: mike.spitalieri@dlzpgroup.com
#        - Key: Environment
#          Value: !Ref EnvType
#        - Key: ServerType
#          Value: !Ref ServerType
    Metadata:
#      'AWS::CloudFormation::Authentication':
#        S3AccessCreds:
#          type: S3
#          buckets: !Ref Bucket
#          roleName: !Ref UpkRole
      'AWS::CloudFormation::Init':
        configSets:
          Normal:
            - source
            - download
            - install
          Debug:
            - source
            - download      
        source:
          files:
            'c:\cfn\cfn-hup.conf':
              content: !Join 
                - ''
                - - |
                    [main]
                  - stack=
                  - !Ref 'AWS::StackId'
                  - |+

                  - region=
                  - !Ref 'AWS::Region'
                  - |+

            'c:\cfn\hooks.d\cfn-auto-reloader.conf':
              content: !Join 
                - ''
                - - |
                    [cfn-auto-reloader-hook]
                  - |
                    triggers=post.update
                  - >
                    path=Resources.upkbaseserver.Metadata.AWS::CloudFormation::Init
                  - 'action=cfn-init.exe -v -s '
                  - !Ref 'AWS::StackId'
                  - ' -r upkbaseserver'
                  - ' --region '
                  - !Ref 'AWS::Region'
                  - |+
            'd:\config\content\upk\sql.bat':
              content: !Join 
                - ''
                - - '"D:\app\oracle\12.2.0\bin\sqlplus.exe" -s UPKRDSADMIN/'
                  - !Ref DBMasterUserPassword
                  - '@'
                  - !Ref DBUpper
                  - ' @"D:\config\content\upk\CreateSystemObjects.sql"'
                  - |+

                  - '"D:\app\oracle\12.2.0\bin\sqlplus.exe" -s UPKDBUSR/'
                  - !Ref UPKDBUSRPWD
                  - '@'
                  - !Ref DBUpper
                  - ' @"D:\config\content\upk\CreateSchemaObjects.sql"'
            'd:\config\content\upk\source.ps1':
              content: !Join 
                - ''
                - - '$DBMasterUserPassword='''
                  - !Ref DBMasterUserPassword
                  - ''''
                  - |+

                  - '$UPKDBUSRPWD='''
                  - !Ref UPKDBUSRPWD
                  - ''''
                  - |+

                  - '$UPKDBUSRAPPPWD='''
                  - !Ref UPKDBUSRAPPPWD
                  - ''''
                  - |+

                  - '$UPKADMINPWD='''
                  - !Ref UPKADMINPWD
                  - ''''
                  - |+

                  - '$RDSURL='''
                  - !Ref RDSURL
                  - ''''
                  - |+

                  - '$EC2URL='''
                  - !Ref EC2URL
                  - ''''
                  - |+

                  - '$DBUpper='''
                  - !Ref DBUpper
                  - ''''
                  - |+

                  - '$DBLower='''
                  - !Ref DBLower
                  - ''''
        download:                  
          commands:
            1a-prereq:
              command: >-
                start /w pkgmgr
                /iu:IIS-WebServerRole;WAS-WindowsActivationService;WAS-ProcessModel
              waitAfterCompletion: '0'          
            1b-Sync S3 UPK Install Bucket:
              command: !Join 
                - ''
                - - 'aws s3 sync --only-show-errors s3://'
                  - !Ref Bucket
                  - '/data/install/upk/'
                  - !Ref Version
                  - ' D:\data\install\upk'
            1c-Sync S3 UPK Config Bucket:
              command: !Join 
                - ''
                - - 'aws s3 sync --only-show-errors s3://'
                  - !Ref Bucket
                  - '/config/codedeploy/upk/'
                  - !Ref Version
                  - ' D:\config'
              waitAfterCompletion: '0'
        install:
          commands:
            01install:
              command: 'powershell.exe -Command D:\config\scripts\install.ps1'
              waitAfterCompletion: '0'
          services:
            windows:
              cfn-hup:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                  - 'c:\cfn\cfn-hup.conf'
                  - 'c:\cfn\hooks.d\cfn-auto-reloader.conf'
  WebTierInternalALB:
    Type: 'AWS::ElasticLoadBalancingV2::LoadBalancer'
    Properties:
      Scheme: internal
      Subnets:
        - !ImportValue 
          'Fn::Sub': '${NetworkStack}-ucsnelbprivateA'
        - !ImportValue 
          'Fn::Sub': '${NetworkStack}-ucsnelbprivateB'
        - !ImportValue 
          'Fn::Sub': '${NetworkStack}-ucsnelbprivateC'
      LoadBalancerAttributes:
        - Key: idle_timeout.timeout_seconds
          Value: '3600'
      SecurityGroups:
        - !Ref WebTierInternalALBSecurityGroup
      Tags:
        - Key: Name
          Value: !Join 
            - ''
            - - !Ref DBUpper
              - '-'
              - ALB
              - '-'
              - Web
              - '-'
              - Internal
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 68c98b09-3768-47b7-9d6a-0cebbc6b888c  
  WebTierInternalALBDNS:
    Type: 'AWS::Route53::RecordSet'
    DependsOn:
      - WebTierInternalALB
    Properties:
      HostedZoneName: !Join 
        - ''
        - - !Ref R53HostedZone
          - .
      Name: !Join 
        - ''
        - - !Ref DBLower
          - .
          - !Ref R53HostedZone
          - .
      Type: A
      AliasTarget:
        HostedZoneId: !GetAtt 
          - WebTierInternalALB
          - CanonicalHostedZoneID
        DNSName: !GetAtt 
          - WebTierInternalALB
          - DNSName
    Metadata:
      'AWS::CloudFormation::Designer':
        id: dcf35dda-4969-441c-a67a-1381d268a14a

  WebTierInternalALBListener:
    Type: 'AWS::ElasticLoadBalancingV2::Listener'
    Properties:
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref WebTierInternalALBTarget
      LoadBalancerArn: !Ref WebTierInternalALB
      Port: '443'
      Protocol: HTTPS
      Certificates:
        - CertificateArn: !Ref SSLCertificateArn
    Metadata:
      'AWS::CloudFormation::Designer':
        id: dd53b387-4859-415e-b3b4-b572dbbd71aa

  WebTierInternalALBTarget:
    Type: 'AWS::ElasticLoadBalancingV2::TargetGroup'
    Properties:
      VpcId: !ImportValue 
        'Fn::Sub': '${NetworkStack}-ucvpc'
      Protocol: HTTPS
      Port: 443
      HealthCheckIntervalSeconds: 30
      HealthCheckPath: /
      HealthCheckPort: 443
      HealthCheckProtocol: HTTPS
      HealthCheckTimeoutSeconds: 10
      HealthyThresholdCount: 2
      UnhealthyThresholdCount: 10
      TargetGroupAttributes:
        - Key: stickiness.enabled
          Value: 'true'
        - Key: deregistration_delay.timeout_seconds
          Value: '300'
        - Key: stickiness.type
          Value: lb_cookie
        - Key: stickiness.lb_cookie.duration_seconds
          Value: '3600'
      Tags:
        - Key: Name
          Value: !Join 
            - ''
            - - !Ref DBUpper
              - '-'
              - ALB
              - '-'
              - TargetGroup
              - '-'
              - Internal
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 7468cde6-fee3-413c-86c1-17e897c2f85c
  
  
  WebTierEC2SecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: PeopleSoft Web EC2 Security Group
      VpcId: !ImportValue 
        'Fn::Sub': '${NetworkStack}-ucvpc'
      SecurityGroupIngress:
        - Description: Allow HTTPS from Load Balancer
          IpProtocol: tcp
          FromPort: '443'
          ToPort: '443'
          SourceSecurityGroupId: !Ref WebTierInternalALBSecurityGroup
        - Description: Allow RDP from VPN
          IpProtocol: 'tcp'
          FromPort: '3389'
          ToPort: '3389'
          SourceSecurityGroupId: sg-3b600446          
      SecurityGroupEgress:
        - Description: Allow all outgoing
          IpProtocol: '-1'
          FromPort: '0'
          ToPort: '65535'
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: !Join 
            - ''
            - - !Ref DBUpper
              - '-'
              - SG
              - '-'
              - EC2
              - '-'
              - Web
              - '-'
              - Internal
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 4a58a654-93ac-4bfe-8f3f-e76accc306d1  
  
  
  WebTierInternalALBSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: PeopleSoft Web ALB Security Group
      VpcId: !ImportValue 
        'Fn::Sub': '${NetworkStack}-ucvpc'
      SecurityGroupIngress:
        - Description: AWS VPC
          IpProtocol: tcp
          FromPort: '443'
          ToPort: '443'
          CidrIp: !Ref AccountCIDR
        - Description: Oakland
          IpProtocol: tcp
          FromPort: '443'
          ToPort: '443'
          CidrIp: 128.48.0.0/19
        - Description: Oakland
          IpProtocol: tcp
          FromPort: '443'
          ToPort: '443'
          CidrIp: 128.48.32.0/19
        - Description: San Diego
          IpProtocol: tcp
          FromPort: '443'
          ToPort: '443'
          CidrIp: 128.48.64.0/19
        - Description: Oakland
          IpProtocol: tcp
          FromPort: '443'
          ToPort: '443'
          CidrIp: 128.48.96.0/19
        - Description: Oakland
          IpProtocol: tcp
          FromPort: '443'
          ToPort: '443'
          CidrIp: 128.48.160.0/19
        - Description: Oakland
          IpProtocol: tcp
          FromPort: '443'
          ToPort: '443'
          CidrIp: 128.48.192.0/19
        - Description: Oakland
          IpProtocol: tcp
          FromPort: '443'
          ToPort: '443'
          CidrIp: 128.48.224.0/19
      SecurityGroupEgress:
        - Description: Allow all outgoing to VPC
          IpProtocol: '-1'
          FromPort: '0'
          ToPort: '65535'
          CidrIp: !Ref AccountCIDR
      Tags:
        - Key: Name
          Value: !Join 
            - ''
            - - !Ref DBUpper
              - '-'
              - SG
              - '-'
              - ALB
              - '-'
              - Web
              - '-'
              - Internal
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 532b574c-9c67-4a96-9316-1c1a7175639b

        